const db=require("mongoose"),products_controller=require("products_controller"),config=require("../config/config"),_=require("underscore"),basket_datas={user_id:{type:"string"},products:{type:[],datas:{_id:{type:"Schema.ObjectId"},product_id:{type:"string",unique:!0},quantity:{type:"number",default:1},datas:{type:[]},price:{type:"Number"},total:{type:"Number"},created:{type:"Date",default:Date.now},updated:{type:"Date",default:Date.now}}},total:{type:"number",default:0},created:{type:"Date",default:Date.now},updated:{type:"Date",default:Date.now}};0===db.connection.readyState&&db.connect(config.database.users,{useMongoClient:!0});const basketSchemas=new db.Schema(basket_datas),Baskets=db.model("Baskets",basketSchemas);module.exports={attributes:basket_datas},module.exports.get=function(e,t,a){var s={};if(e.isAdmin&&void 0!==e.query.basket_id)s={_id:e.query.basket_id};else{if(void 0===e.query.user_id)return a({status:405,message:"NOT_LOGGED_IN"}),!1;s={user_id:e.query.user_id}}Baskets.find(s,function(e,t){a(e?{status:405,datas:e}:{status:200,datas:t})})},module.exports.create=function(e,t,a){products_controller.get(t,t,function(e){}),next()},module.exports.update=function(e,t,a){delete datas.options,delete datas._id;datas.updated=Date.now(),Baskets.updateOne({_id:e.body._id},{$set:datas},function(e,t){a(e?{status:405,message:e}:{status:200,apps:t})})},module.exports.delete=function(e,t,a){Baskets.deleteOne({_id:e.body._id},function(e,t){a(e?{status:405,message:e}:{status:200,apps:t})})};