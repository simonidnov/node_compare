const db=require("mongoose"),app=require("../app"),sha1=require("sha1"),jwt=require("jsonwebtoken"),validator=require("email-validator"),Members_model=require("../models/members_model"),Address_model=require("../models/address_model"),config=require("../config/config"),os=require("os"),gravatar=require("gravatar"),user_datas={email:{type:"string",unique:!0},password:{type:"string"},pseudo:{type:"string",unique:!0},firstName:{type:"string"},avatar:{type:"string"},lastName:{type:"string"},phone:{type:"string"},mobile:{type:"string"},token:{type:"string"},validation_code:{type:"string"},secret:{type:"string"},qrcode:{type:"Object"},birthDate:{type:"Date"},gender:{type:"string","enum":["undefined","male","female"],defaults:"undefined"},address:{type:"Array"},friends:{type:"Array"},relations:{type:"Array"},apps:{type:"Array"},tags:{type:"Object"},devices:{type:"Object"},termAccept:{type:"Boolean"},newsletter:{type:"Boolean"},newsletter_services:{type:"Object"},sms:{type:"Boolean"},sms_services:{type:"Object"},notifications:{type:"Boolean"},notifications_services:{type:"Object"},rights:{type:"Object"},validated:{type:"Boolean"},created:{type:"Date","default":Date.now},updated:{type:"Date","default":Date.now},public_locale:{type:"Boolean"},public_profile:{type:"Object"}},machineId=require("node-machine-id"),device_uid=machineId.machineIdSync({original:!0});0===db.connection.readyState&&db.connect(config.database.users,{useMongoClient:!0});const userSchemas=new db.Schema(user_datas),User=db.model("User",userSchemas);db.connection.on("open",function(e){console.log("Connected to mongo server.")}),db.connection.on("error",function(e){console.log("Could not connect to mongo server!"),console.log(e)}),module.exports={attributes:user_datas},module.exports.getCount=function(){return User.find({}).count()},module.exports.getActive=function(){return User.find({updated:{$gte:new Date(ISODate().getTime()-2592e5)}}).count()},module.exports.get=function(e,s,t){var a=this;User.find({},function(e,s){t(e?{status:304,code:e.code,error:e,message:e.message}:{status:200,users:s,total:a.getCount()})}).skip(50*parseInt(s.page)).limit(50)},module.exports.login=function(e,s,t){var a=this;return s.password?validator.validate(s.email)?User.find({email:s.email,password:sha1(s.password)},function(i,o){if(i)t({status:"error",code:i.code,error:i,message:i.message});else{if(0===o.length)return User.find({email:s.email},function(e,s){t(e?{status:"error",code:11,error:e,message:"user_not_found"}:0===s.length?{status:"error",code:11,error:e,message:"user_not_found",email_valid:s.length}:{status:"error",code:13,error:e,message:"wrong_pawword",email_valid:s.length})}),!1;var n={uid:s.device_uid,arch:os.arch(),name:os.hostname()},r=jwt.sign({secret:o[0].secret},config.secrets.global.secret,{expiresIn:"2 days"});if(n.token=r,User.find({_id:o[0]._id,devices:{$elemMatch:{uid:s.device_uid}}},function(e,t){e?User.update({_id:o[0]._id},{$push:{devices:n}},function(e,s){e?console.log("impossible d insérer le new_device ",e):console.log("new_device ajouté success ",s)}):0===t.length?User.update({_id:o[0]._id},{$push:{devices:n}},function(e,s){e?console.log("impossible d insérer le new_device ",e):console.log("new_device ajouté success ",s)}):User.update({id:o[0]._id,devices:{$elemMatch:{uid:s.device_uid}}},{$set:{token:r}},function(e,s){e?console.log("update device token error ",e):console.log("update device token success ",s)},!0)}),""===o[0].avatar||null==o[0].avatar)var d=gravatar.url(o[0].email,{s:"200",r:"pg",d:"404"}).replace("//","http://");else var d=o[0].avatar;User.update({_id:o[0]._id},{$set:{token:r,updated:Date.now(),avatar:d}},function(s,i){s?t({status:"error",code:s.code,error:s,message:s.message}):a.reset_session(e,o[0]._id,function(e){t({status:200,message:"User updated",idkids_user:e})})})}}):t({message:"email invalide"},null):t([]),s},module.exports.logout=function(e,s){return s(),e},module.exports.register=function(e,s){db.connect(config.database.users,{useMongoClient:!0});var t={email:e.body.subscribe_email,password:sha1(e.body.subscribe_password),pseudo:e.body.pseudo,secret:jwt.sign({},config.secrets.global.secret,{},{expiresIn:"2 days"}),termAccept:!0,rights:{type:"RWO",authorizations:["me"]}};return t.token=jwt.sign({secret:t.secret},config.secrets.global.secret,{expiresIn:"2 days"}),t.device=[{uid:e.body.device_uid,arch:os.arch(),name:os.hostname(),token:jwt.sign({secret:t.secret},config.secrets.global.secret,{expiresIn:"2 days"}),avatar:gravatar.url(e.body.subscribe_email,{s:"200",r:"pg",d:"404"}).replace("//","http://")}],e.body.subscribe_newsletter?(t.newsletter=!0,t.newsletter_services={},e.body.newsletter_okaidi&&(t.newsletter_services.okaidi=1),e.body.newsletter_obaibi&&(t.newsletter_services.obaibi=1),e.body.newsletter_jacadi&&(t.newsletter_services.jacadi=1),e.body.newsletter_oxybul&&(t.newsletter_services.oxybul=1),e.body.newsletter_rclv&&(t.newsletter_services.rclv=1),e.body.newsletter_njoy&&(t.newsletter_services.njoy=1),e.body.newsletter_joyvox&&(t.newsletter_services.joyvox=1)):(t.newsletter=!1,t.newsletter_services={}),new_user=new User(t),new_user.save(function(e){s(e?{status:"error",message:e}:{status:"success",user:t})}),e.body},module.exports.unregister=function(e){return e},module.exports.update=function(e,s,t,a){var i=this;t.updated=Date.now(),"undefined"!=typeof t.birthDate&&(t.birthDate=t.birthDate),User.update({_id:s},{$set:t},function(t,o){t?a({status:401,message:"Impossible de mettre à jour le token WHY ?",datas:t}):i.reset_session(e,s,function(){a({status:200,message:"User updated",datas:o})})},!0)},module.exports.check_user=function(e,s){var t={uid:e.options.device_uid,arch:os.arch(),name:os.hostname()},a=jwt.sign({secret:e.options.user_secret},config.secrets.global.secret,{expiresIn:"2 days"});t.token=a,User.find({_id:e.options.user_id,secret:e.options.user_secret,devices:{$elemMatch:{uid:e.options.device_uid,token:e.options.user_token}}},function(t,i){t?s({status:401,message:"user token device doesn't match",datas:t}):User.update({id:e.options.user_id,devices:{$elemMatch:{uid:e.options.device_uid}}},{$set:{token:a,updated:Date.now()}},function(e,t){s(e?{status:401,message:"Impossible de mettre à jour le token WHY ?",datas:e}:{status:200,message:"User auth success",datas:i,updated_token:a})},!0)})},module.exports.reset_session=function(e,s,t){User.findOne({_id:s},function(a,i){a?t({status:401,code:a.code,error:a,message:a.message}):(user_infos=JSON.parse(JSON.stringify(i)),user_infos.current_device=device_uid,Members_model.get(s,null,function(a){user_infos.members=a.datas,Address_model.get(s,null,function(s){user_infos.address=s.datas,e.session.Auth=user_infos,t({status:200,message:"Session Updated",datas:user_infos})})}))})},module.exports.getPublicProfile=function(e,s){this.getFullUser(e,function(e){if(200===e.status){var t={_id:e.datas._id,pseudo:e.datas.pseudo,email:e.datas.email,avatar:e.datas.avatar,created:e.datas.created,updated:e.datas.updated};s({status:e.status,message:e.message,datas:t})}else s(e)})},module.exports.getServices=function(e,s){this.getFullUser(e,function(e){if(200===e.status){({is_newsletter:e.datas.is_newsletter,newsletter_services:e.datas.newsletter_services});s({status:e.status,message:e.message,datas:e.datas.public_services})}else s(e)})},module.exports.getFullUser=function(e,s){User.findOne({_id:e},function(t,a){t?s({status:401,message:"This is no way to peace -> peace is the way. UNAUTHORIZED",datas:t}):null!==a?Members_model.get(e,null,function(e){a.members=e.datas,s({status:200,message:"success me",datas:a})}):s({status:304,message:"USER NOT FOUND",datas:a})})},module.exports.getValidationCode=function(e,s){User.findOne({_id:e},function(e,t){if(e)s({status:401,message:"This is no way to peace -> peace is the way. UNAUTHORIZED",datas:e});else if(null!==t){var a=jwt.sign({secret:t.secret},config.secrets.global.secret,{expiresIn:"2 days"});User.update({_id:t._id},{$set:{validation_code:a}},function(e,i){e?console.log("impossible de mettre à jour le code de validation ",e):console.log("code de validation mis à jour ",t),s({status:200,validation_code:a,email:t.email,pseudo:t.pseudo,avatar:t.avatar})})}else s({status:304,message:"USER NOT FOUND",datas:t})})},module.exports.validAccount=function(e,s){User.findOne({email:e.email,validation_code:e.validation_code},function(e,t){e||0===t.length?s({status:304,message:"Impossible de certifier l'utilisateur",datas:e}):User.update({_id:t._id},{$set:{validated:!0,certified:!0}},function(e,t){s(e?{status:304,message:"Impossible de certifier l'utilisateur",datas:e}:{status:200,message:"Utilisateur certifié validé",datas:t})})})},user_datas.getAge=function(){return this.birthDate};