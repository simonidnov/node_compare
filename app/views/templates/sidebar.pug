block sidebar
  .page-sidebar(v-bind:class="(openSide)? 'opened' : ''")#sidepanel
    .open-sidebar(v-on:click="openSide = !openSide")
      span
      span
      span
    .logo()
      a(href="/playlist")
        include ../../public/images/assets/icon_brand.svg
    .scrollview
      if(typeof user!== "undefined")
        .account(v-on:click="userPanel != userPanel")
          .avatar(style="background-image:url("+user.avatar+")")
          .pseudo= user.pseudo
      else
        a(href="/auth")
          .account
            .avatar(style="background-image:url(../../images/assets/account.svg)")
            .pseudo Me connecter
      div(v-if="userPanel")
        h3 User Panel
      div
        .search
          input.searchInput#searchAll(type="search", placeholder="Titre, Album ou Playlist", v-on:keyup="search($event.target.value)", v-model="searchValue")
        h3 Ma musique
        ul.playlist-list
          li(v-for="product in userproducts" v-on:click="reloadAlbum(product.product_id)" v-if="product.meta_datas.extra_category === 'LIVRECD'")
            .cover(v-bind:style="{'background-image':'url('+product.meta_datas.thumb+')'}")
            .infos
              .label {{ product.meta_datas.label }}
              .datas {{ product.meta_datas.medias.length}} titres
        div(v-if="userproducts.length == 0")
          span Vous n'avez pas de musique sur Joyvox
        h3 À découvrir
        ul.playlist-list
          li(v-for="album in albums" v-on:click="reloadAlbum(album._id)")
            .cover(v-bind:style="{'background-image':'url('+album.thumb+')'}")
            .infos
              .label {{ album.label }}
              .datas {{ album.medias.length}} titres
          //-album-listcomp(label="ZANIMOMUSIC 2", thumb="", shortname="", medialength="", id="")
      //-p= JSON.stringify(albums)
  script.
    let albumList = new Vue(
      { 
        el: '#sidepanel',
        data: {
          params: !{JSON.stringify(params)},
          albums: !{JSON.stringify(albums)},
          db    : !{JSON.stringify(albums)},
          userPanel : false,
          searchValue : "",
          openSide : false,
          userproducts : !{JSON.stringify(userproducts)}
        },
        methods : {
          reloadAlbum: function(_id) {
            var self = this;
            index.sdk.api.get('/products', {product_id:_id}, function(e){
              if(typeof player !== "undefined" && e.length > 0){
                player.medias = e[0].medias;
                player.title = e[0].label;
                player.cover = e[0].thumb;
                player.description = e[0].description;
                player.product = e[0];
                
                homeView.displayHome = false;
                
                albumList.params.loop = player.isLoop;
                albumList.params.random = player.isRandom;
                albumList.params.index = player.index;
                albumList.params.volume = player.volume;
                history.pushState(self.params, null, '/playlist/'+_id+"?"+Object.keys(albumList.params).map(key => key + '=' + albumList.params[key]).join('&'));
              }else{
                var pop = new popeye (
                    $('#playlist'),
                    {
                      type:"modal",
                      title:"Erreur",
                      message:"La playlist que vous tentez d'écouter est introuvable, il est possible que les medias qui la compose aient été supprimés."
                    },
                    function(e){
                    }
                );
                pop.init();
              }
            }, function(e){
              console.log('FAIL ', e);
            });
          },
          search : function(value){
            this.searchValue = value;
            if(value === ""){
              if(player.hasProduct){
                homeView.displayHome = false;
              }else{
                homeView.displayHome = true;
              }
              research.hasResearch = false;
              this.albums = this.db;
            }else{
              console.log('search ', value);
              homeView.displayHome = false;
              research.hasResearch = false;
              research.hasResearch = true;
              research.search(value);
            }
          }
        }
      }
    )
