var $jscomp={scope:{},findInternal:function(a,d,b){a instanceof String&&(a=String(a));for(var c=a.length,e=0;e<c;e++){var f=a[e];if(d.call(b,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}}};$jscomp.defineProperty="function"==typeof Object.defineProperties?Object.defineProperty:function(a,d,b){if(b.get||b.set)throw new TypeError("ES3 does not support getters and setters.");a!=Array.prototype&&a!=Object.prototype&&(a[d]=b.value)};
$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.polyfill=function(a,d,b,c){if(d){b=$jscomp.global;a=a.split(".");for(c=0;c<a.length-1;c++){var e=a[c];e in b||(b[e]={});b=b[e]}a=a[a.length-1];c=b[a];d=d(c);d!=c&&null!=d&&$jscomp.defineProperty(b,a,{configurable:!0,writable:!0,value:d})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,b){return $jscomp.findInternal(this,a,b).v}},"es6-impl","es3");var db=require("mongoose"),metas_datas={key:{type:"string"},value:{type:"string"},content:{type:"Object"},created:{type:"Date","default":Date.now},updated:{type:"Date","default":Date.now}};0===db.connection.readyState&&db.connect(config.database.users,{useMongoClient:!0});var metasSchemas=new db.Schema(metas_datas),Metas=db.model("Metas",metasSchemas);
module.exports={attributes:metas_datas};module.exports.get=function(a,d,b){"undefined"!==typeof a.query.data&&(a.query=a.query.data);"undefined"===typeof a.query.key?b({status:405,datas:"NEED_KEY"}):Metas.find({},function(a,e){a?b({status:405,datas:a}):b({status:200,datas:e})})};
module.exports.create=function(a,d,b){if("undefined"!==typeof a.body.data)var c=a.body.data;"undefined"===typeof c.key&&b({status:204,datas:{message:"NEED_META_KEY"}});"undefined"===typeof c.value&&b({status:204,datas:{message:"NEED_META_VALUE"}});new_meta=new Metas({key:c.key,value:c.value,content:c.content});new_meta.save(function(a,c){a?b({status:400,datas:{message:a}}):b({status:200,datas:c})})};
